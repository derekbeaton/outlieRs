% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcd.boot_find.outliers.R
\name{mcd.boot_find.outliers}
\alias{mcd.boot_find.outliers}
\title{Find outliers with the MCD+Bootstrap PCA approach}
\usage{
mcd.boot_find.outliers(X, center = F, scale = F, mcd.search.iters = 1000,
  mcd.alpha = 0.75, boot.search.iters = 1000, full.cloud.thresh = 0.99,
  frequency.thresh = NA)
}
\arguments{
\item{X}{Data matrix}

\item{center}{a boolean, vector, or string. See ?expo.scale for details.}

\item{scale}{a boolean, vector, or string. See ?expo.scale for details.}

\item{mcd.search.iters}{numeric. The number of maximum iterations to perform MCD search}

\item{mcd.alpha}{numeric. Threshold for proportion of MCD-based outliers during MCD search.}

\item{boot.search.iters}{numeric. The number of iterations to perform bootstrapping}

\item{full.cloud.thresh}{numeric. Threshold for proportion of values from bootstrapping to be considered outliers}

\item{frequency.thresh}{numeric. numeric. An inverse threshold for bootstrapping. Typically 1-full.cloud.thresh; typically unused (for now)}
}
\value{
A list with two elements: outlier_decision and hidden_detail.
\item{outlier_decision}{ a data.frame indicating the observations that are outliers: 1 = outlier; 0 = not an outlier.}
hidden_detail is another list with the additional information: a matrix with 8 columns. The first 4 columns are for Mahalanobis distance outlier estimates, and the last 4 columns are for Chi-squared distance outlier estimates.
         the 'Dist' columns provide the distance of each item, the 'boot dist' columns provide the average of bootstrap distances
         the 'out %' column provides a likelihood of outlierness where the 'Outlier' columns are a simple 1 (yes) and 0 (no) of whether an item is an outlier based on the 'out %' value (and the threshold parameters input by the user)
}
\description{
Find outliers with the MCD+Bootstrap PCA approach
}
\examples{
data(beer.tasting.notes)
the.data <- expo.scale(beer.tasting.notes$data)
the.data_corrected_for_ABV <- apply(the.data,2, function(x){ resid(lm(x~beer.tasting.notes$sup.data[,"ABV"])) } )
beer_MCD.boot_full.combined_95 <- mcd.boot_find.outliers(the.data,center=F,scale=F)
beer.corrected_MCD.boot_full.combined_95 <- mcd.boot_find.outliers(the.data_corrected_for_ABV,center=F,scale=F)
}
